{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kaela\\\\universidad\\\\winter semester\\\\graphical user interfaces\\\\labs\\\\school_planner_react\\\\src\\\\components\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { columns, tableData } from \"./tableData\";\nimport { useTable } from 'react-table';\nimport './tableStyle.css';\n\nconst Home = () => {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const [currentRoom, setCurrentRoom] = useState();\n  const history = useHistory();\n  const blankData = tableData;\n\n  const updateActivities = () => {\n    tableData = blankData; // reset\n\n    for (activity in activities) {\n      if (activity.room == currentRoom) {\n        var row = tableData[activity.slot - 1];\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('/plannerData');\n      setRooms(result.data.rooms);\n      setActivities(result.data.activities);\n\n      if (currentRoom == undefined) {\n        setCurrentRoom(rooms[0]);\n      }\n    };\n\n    fetchData();\n    updateActivities();\n    console.log('fetching data...');\n  }, []); // CREATION OF THE TABLE\n\n  const table = useTable({\n    columns: useMemo(() => columns, []),\n    data: useMemo(() => tableData, [])\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table; // ROOMS\n\n  const roomChanged = data => {\n    setCurrentRoom(data['room']); // update activities\n  };\n\n  const roomsSelect = room => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }; // CELL CLICKED\n\n\n  const createActivity = cell => {\n    console.log('cell clicked');\n    var info = {\n      'room': currentRoom,\n      'slot': cell.row.index + 1,\n      'day': cell.column.Header\n    };\n    console.log(info);\n    history.push('/createActivity', info);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8%',\n      marginRight: '8%',\n      marginTop: '15px',\n      marginBottom: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: handleSubmit(roomChanged),\n        style: {\n          marginBottom: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"room\",\n          className: \"form-control\",\n          ref: register({\n            required: true\n          }),\n          style: {\n            width: '150px'\n          },\n          children: rooms.map(roomsSelect)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  onDoubleClick: () => createActivity(cell),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"XMxhkH8g95DHEFhVb1swJ3YRAk8=\", false, function () {\n  return [useForm, useHistory, useTable];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/kaela/universidad/winter semester/graphical user interfaces/labs/school_planner_react/src/components/home.js"],"names":["React","useState","useEffect","useMemo","axios","useForm","useHistory","columns","tableData","useTable","Home","rooms","setRooms","activities","setActivities","handleSubmit","register","currentRoom","setCurrentRoom","history","blankData","updateActivities","activity","room","row","slot","fetchData","result","data","undefined","console","log","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","roomChanged","roomsSelect","createActivity","cell","info","index","column","Header","push","marginLeft","marginRight","marginTop","marginBottom","required","width","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { columns, tableData } from \"./tableData\";\r\nimport { useTable } from 'react-table';\r\nimport './tableStyle.css';\r\n\r\nconst Home = () => {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [activities, setActivities] = useState([]);\r\n    const {handleSubmit, register} = useForm();\r\n    const [currentRoom, setCurrentRoom] = useState();\r\n    const history = useHistory();\r\n    const blankData = tableData;\r\n\r\n    const updateActivities = () => {\r\n\r\n        tableData = blankData; // reset\r\n\r\n        for(activity in activities){\r\n            if(activity.room == currentRoom){\r\n                var row = tableData[activity.slot-1];\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                '/plannerData',\r\n            );\r\n            setRooms(result.data.rooms);\r\n            setActivities(result.data.activities);\r\n            if(currentRoom == undefined){\r\n                setCurrentRoom(rooms[0]);\r\n            }\r\n        }\r\n        fetchData();\r\n        updateActivities();\r\n        console.log('fetching data...');\r\n    }, []);\r\n\r\n    // CREATION OF THE TABLE\r\n    const table = useTable({\r\n        columns: useMemo(() => columns, []),\r\n        data: useMemo(() => tableData, [])\r\n    });\r\n\r\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = table;\r\n\r\n    // ROOMS\r\n    const roomChanged = (data) => {\r\n        setCurrentRoom(data['room']);\r\n\r\n        // update activities\r\n    }\r\n    \r\n    const roomsSelect = (room) => {\r\n        return <option>{room}</option>;\r\n    }\r\n\r\n    // CELL CLICKED\r\n    const createActivity = (cell) => {\r\n\r\n        console.log('cell clicked');\r\n\r\n        var info = {\r\n            'room': currentRoom,\r\n            'slot': cell.row.index + 1,\r\n            'day': cell.column.Header\r\n        }\r\n        console.log(info);\r\n\r\n        history.push('/createActivity', info);\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: '8%', marginRight: '8%', marginTop: '15px', marginBottom: '30px'}}>\r\n            <div className=\"wrapper\">\r\n\r\n                <form onChange={handleSubmit(roomChanged)} style={{marginBottom: '30px'}}>\r\n                    <label>Room:</label>\r\n                    <select name='room' className=\"form-control\" ref={register({ required: true})} style={{width: '150px'}}>\r\n                        {rooms.map(roomsSelect)}\r\n                    </select>       \r\n                </form>\r\n\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}                        \r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map((row) => {\r\n                            prepareRow(row)\r\n                            return(\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map((cell) => {\r\n                                        return <td {...cell.getCellProps()} onDoubleClick={() => createActivity(cell)}>\r\n                                            {cell.render('Cell')}</td>\r\n                                    })}\r\n                                    \r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}