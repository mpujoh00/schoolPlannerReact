{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kaela\\\\universidad\\\\winter semester\\\\graphical user interfaces\\\\labs\\\\school_planner_react\\\\src\\\\components\\\\home.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { columns, tableData } from \"./tableData\";\nimport { useTable } from 'react-table';\nimport './tableStyle.css';\n\nconst Home = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [rooms, setRooms] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const [currentRoom, setCurrentRoom] = useState();\n  const history = useHistory();\n  const [rowsData, setRowsData] = useState(tableData);\n  useEffect(() => {\n    const getData = async () => {\n      console.log('getting data...');\n      const result = await axios.get('/plannerData');\n\n      if (rooms.length == 0) {\n        setRooms(result.data.rooms);\n        setActivities(result.data.activities);\n      }\n\n      if (currentRoom == undefined) {\n        setCurrentRoom(rooms[0]);\n      }\n    };\n\n    getData();\n  }, [rooms]);\n  useEffect(() => {\n    updateActivities();\n  }, [currentRoom]);\n  useEffect(_s(() => {\n    _s();\n\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns: columns,\n      data: rowsData\n    });\n  }, \"bEm7KCF8mA6wctmED8HARQNSYg8=\", false, function () {\n    return [useTable];\n  }), [rowsData]);\n\n  const updateActivities = () => {\n    console.log('updating activities...');\n    console.log(activities);\n    var rows = tableData; // reset\n\n    if (currentRoom == undefined) {\n      setCurrentRoom(rooms[0]);\n    }\n\n    for (let i = 0; i < activities.length; i++) {\n      var activity = activities[i];\n\n      if (activity.room == currentRoom) {\n        var row = rows[activity.slot - 1];\n        console.log(row);\n        row[activity['day']] = activity['class'];\n        console.log(row);\n        rows[activity.slot - 1] = row;\n        console.log(rows);\n      }\n    }\n\n    setRowsData(rows);\n  }; // CREATION OF THE TABLE\n\n  /*const table = useTable({\r\n      columns: useMemo(() => columns, []),\r\n      data: useMemo(() => rowsData, [])\r\n  });*/\n\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table; //const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = table;\n  // ROOMS\n\n  const roomChanged = data => {\n    setCurrentRoom(data['room']);\n  };\n\n  const roomsSelect = room => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  }; // CELL CLICKED\n\n\n  const createActivity = cell => {\n    console.log('cell clicked');\n    console.log(cell.column);\n    var info = {\n      'room': currentRoom,\n      'slot': cell.row.index + 1,\n      'day': cell.column.id\n    };\n    console.log(info);\n    history.push('/createActivity', info);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8%',\n      marginRight: '8%',\n      marginTop: '15px',\n      marginBottom: '30px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: handleSubmit(roomChanged),\n        style: {\n          marginBottom: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"room\",\n          className: \"form-control\",\n          ref: register({\n            required: true\n          }),\n          style: {\n            width: '150px'\n          },\n          children: rooms.map(roomsSelect)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  onDoubleClick: () => createActivity(cell),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 48\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Home, \"gVThSSwaCVJ6xgPlqAP5dWNsJBI=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/kaela/universidad/winter semester/graphical user interfaces/labs/school_planner_react/src/components/home.js"],"names":["React","useState","useEffect","useMemo","axios","useForm","useHistory","columns","tableData","useTable","Home","rooms","setRooms","activities","setActivities","handleSubmit","register","currentRoom","setCurrentRoom","history","rowsData","setRowsData","getData","console","log","result","get","length","data","undefined","updateActivities","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","i","activity","room","row","slot","table","roomChanged","roomsSelect","createActivity","cell","column","info","index","id","push","marginLeft","marginRight","marginTop","marginBottom","required","width","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","getCellProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { columns, tableData } from \"./tableData\";\r\nimport { useTable } from 'react-table';\r\nimport './tableStyle.css';\r\n\r\nconst Home = () => {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [activities, setActivities] = useState([]);\r\n    const {handleSubmit, register} = useForm();\r\n    const [currentRoom, setCurrentRoom] = useState();\r\n    const history = useHistory();\r\n    const [rowsData, setRowsData] = useState(tableData);\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            console.log('getting data...');\r\n            const result = await axios.get('/plannerData');\r\n            if(rooms.length == 0){\r\n                setRooms(result.data.rooms);\r\n                setActivities(result.data.activities);\r\n            }\r\n            if(currentRoom == undefined){\r\n                setCurrentRoom(rooms[0]);\r\n            }\r\n        }\r\n        getData();\r\n    }, [rooms]);\r\n\r\n    useEffect(() => {\r\n        updateActivities();\r\n    }, [currentRoom]);\r\n\r\n    useEffect(() => {\r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow\r\n        } = useTable({ columns: columns, data: rowsData });\r\n    }, [rowsData]);\r\n\r\n    const updateActivities = () => {\r\n\r\n        console.log('updating activities...');\r\n        console.log(activities);\r\n        var rows = tableData; // reset\r\n\r\n        if(currentRoom == undefined){\r\n            setCurrentRoom(rooms[0]);\r\n        }\r\n\r\n        for(let i=0; i<activities.length; i++){\r\n            var activity = activities[i];\r\n            if(activity.room == currentRoom){\r\n                var row = rows[activity.slot-1];\r\n                console.log(row);\r\n                row[activity['day']] = activity['class'];\r\n                console.log(row);\r\n                rows[activity.slot-1] = row;\r\n                console.log(rows);\r\n            }\r\n        }\r\n        setRowsData(rows);\r\n        \r\n    }\r\n\r\n    // CREATION OF THE TABLE\r\n    /*const table = useTable({\r\n        columns: useMemo(() => columns, []),\r\n        data: useMemo(() => rowsData, [])\r\n    });*/\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = table;\r\n\r\n    //const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = table;\r\n\r\n    // ROOMS\r\n    const roomChanged = (data) => {\r\n        setCurrentRoom(data['room']);\r\n    }\r\n    \r\n    const roomsSelect = (room) => {\r\n        return <option>{room}</option>;\r\n    }\r\n\r\n    // CELL CLICKED\r\n    const createActivity = (cell) => {\r\n\r\n        console.log('cell clicked');\r\n        console.log(cell.column);\r\n\r\n        var info = {\r\n            'room': currentRoom,\r\n            'slot': cell.row.index + 1,\r\n            'day': cell.column.id\r\n        }\r\n        console.log(info);\r\n\r\n        history.push('/createActivity', info);\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: '8%', marginRight: '8%', marginTop: '15px', marginBottom: '30px'}}>\r\n            <div className=\"wrapper\">\r\n\r\n                <form onChange={handleSubmit(roomChanged)} style={{marginBottom: '30px'}}>\r\n                    <label>Room:</label>\r\n                    <select name='room' className=\"form-control\" ref={register({ required: true})} style={{width: '150px'}}>\r\n                        {rooms.map(roomsSelect)}\r\n                    </select>       \r\n                </form>\r\n\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map((column) => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}                        \r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map((row) => {\r\n                            prepareRow(row)\r\n                            return(\r\n                                <tr {...row.getRowProps()}>\r\n                                    {row.cells.map((cell) => {\r\n                                        return <td {...cell.getCellProps()} onDoubleClick={() => createActivity(cell)}>\r\n                                            {cell.render('Cell')}</td>\r\n                                    })}\r\n                                    \r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}