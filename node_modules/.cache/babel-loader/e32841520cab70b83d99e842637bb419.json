{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kaela\\\\universidad\\\\winter semester\\\\graphical user interfaces\\\\labs\\\\school_planner_react\\\\src\\\\components\\\\homeMal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom'; // STYLES\n\nconst homeStyle = {\n  display: 'grid',\n  backgroundColor: 'rgba(0,0,0,0.1)',\n  padding: '20px'\n};\nconst roomSelectStyle = {\n  height: '10%'\n};\nconst selectStyle = {\n  control: base => ({ ...base,\n    width: '150px'\n  }),\n  menu: base => ({ ...base,\n    width: '150px'\n  })\n}; // TABLE DATA\n\nconst columns = [{\n  name: 'Time',\n  key: 'time',\n  editable: false\n}, {\n  name: 'Monday',\n  key: 'monday',\n  editable: true\n}, {\n  name: 'Tuesday',\n  key: 'tuesday',\n  editable: true\n}, {\n  name: 'Wednesday',\n  key: 'wednesday',\n  editable: true\n}, {\n  name: 'Thursday',\n  key: 'thursday',\n  editable: true\n}, {\n  name: 'Friday',\n  key: 'friday',\n  editable: true\n}];\nconst times = [{\n  'time': '8:00 - 8:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, // slot 1\n{\n  'time': '9:00 - 9:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '10:00 - 10:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '11:00 - 11:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '12:00 - 12:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '13:00 - 13:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, // slot 6\n{\n  'time': '14:00 - 14:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '15:00 - 15:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '16:00 - 16:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n}, {\n  'time': '17:00 - 17:50',\n  'monday': '',\n  'tuesday': '',\n  'wednesday': '',\n  'thursday': '',\n  'friday': ''\n} // slot 10 \n];\n\nconst Home = () => {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [activities, setActivities] = useState([]);\n  const [table, setTable] = useState(times);\n  const history = useHistory();\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const [currentRoom, setCurrentRoom] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('/plannerData');\n      setRooms(result.data.rooms);\n      setActivities(result.data.activities);\n\n      if (currentRoom == undefined) {\n        setCurrentRoom(rooms[0]);\n      }\n    };\n\n    fetchData();\n    console.log('fetching data...');\n  }, []);\n\n  const roomChanged = data => {\n    setCurrentRoom(data['room']);\n  };\n\n  const roomsSelect = room => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  };\n\n  const tableUpdated = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    setTable(table => {\n      const rows = table.slice();\n\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i],\n          ...updated\n        };\n      }\n\n      return {\n        rows\n      };\n    });\n  };\n\n  const cellClicked = () => {\n    console.log('Cell double clicked');\n    var info = {\n      'room': currentRoom,\n      'slot': 'cara',\n      'day': 'culo'\n    };\n    console.log(info);\n    history.push('/createActivity', info);\n  };\n\n  class cellRenderer extends React.Component {\n    constructor(props) {\n      super(props);\n      console.log('column ' + this.props.column.name);\n      console.log('row ' + this.props.rowData);\n    }\n\n    getValue() {}\n\n    value() {\n      console.log('holisssss    ' + this.props.column.name);\n      return this.props.column.name;\n    }\n\n    render() {\n      //history.push('/createActivity');\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"hola hoy es \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this);\n    }\n\n  }\n\n  for (let i = 1; i < columns.length; i++) {\n    var col = columns[i];\n    col['editor'] = cellRenderer;\n    columns[i] = col;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '8%',\n      marginRight: '8%',\n      marginTop: '15px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: handleSubmit(roomChanged),\n        style: {\n          marginBottom: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"room\",\n          className: \"form-control\",\n          ref: register({\n            required: true\n          }),\n          style: {\n            width: '150px'\n          },\n          children: rooms.map(roomsSelect)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n        columns: columns,\n        rows: table,\n        rowsCount: table.length,\n        onGridRowsUpdated: tableUpdated,\n        enableCellSelect: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"VOnblYCPhlUqK13Y4ye1R/YuWHI=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/kaela/universidad/winter semester/graphical user interfaces/labs/school_planner_react/src/components/homeMal.js"],"names":["React","useState","useEffect","axios","ReactDataGrid","useForm","useHistory","homeStyle","display","backgroundColor","padding","roomSelectStyle","height","selectStyle","control","base","width","menu","columns","name","key","editable","times","Home","rooms","setRooms","activities","setActivities","table","setTable","history","handleSubmit","register","currentRoom","setCurrentRoom","fetchData","result","data","undefined","console","log","roomChanged","roomsSelect","room","tableUpdated","fromRow","toRow","updated","rows","slice","i","cellClicked","info","push","cellRenderer","Component","constructor","props","column","rowData","getValue","value","render","length","col","marginLeft","marginRight","marginTop","marginBottom","required","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,eAAe,EAAE,iBAFH;AAGdC,EAAAA,OAAO,EAAE;AAHK,CAAlB;AAMA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,MAAM,EAAE;AADY,CAAxB;AAIA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAGC,IAAD,KAAW,EAChB,GAAGA,IADa;AAEhBC,IAAAA,KAAK,EAAE;AAFS,GAAX,CADO;AAKhBC,EAAAA,IAAI,EAAGF,IAAD,KAAW,EACb,GAAGA,IADU;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAAX;AALU,CAApB,C,CAWA;;AACA,MAAME,OAAO,GAAG,CACZ;AAACC,EAAAA,IAAI,EAAE,MAAP;AAAeC,EAAAA,GAAG,EAAE,MAApB;AAA4BC,EAAAA,QAAQ,EAAE;AAAtC,CADY,EAEZ;AAACF,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,GAAG,EAAE,QAAtB;AAAgCC,EAAAA,QAAQ,EAAE;AAA1C,CAFY,EAGZ;AAACF,EAAAA,IAAI,EAAE,SAAP;AAAkBC,EAAAA,GAAG,EAAE,SAAvB;AAAkCC,EAAAA,QAAQ,EAAE;AAA5C,CAHY,EAIZ;AAACF,EAAAA,IAAI,EAAE,WAAP;AAAoBC,EAAAA,GAAG,EAAE,WAAzB;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAJY,EAKZ;AAACF,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,GAAG,EAAE,UAAxB;AAAoCC,EAAAA,QAAQ,EAAE;AAA9C,CALY,EAMZ;AAACF,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,GAAG,EAAE,QAAtB;AAAgCC,EAAAA,QAAQ,EAAE;AAA1C,CANY,CAAhB;AASA,MAAMC,KAAK,GAAG,CACV;AAAC,UAAQ,aAAT;AAAwB,YAAU,EAAlC;AAAsC,aAAW,EAAjD;AAAqD,eAAa,EAAlE;AAAsE,cAAY,EAAlF;AAAsF,YAAU;AAAhG,CADU,EAC4F;AACtG;AAAC,UAAQ,aAAT;AAAwB,YAAU,EAAlC;AAAsC,aAAW,EAAjD;AAAqD,eAAa,EAAlE;AAAsE,cAAY,EAAlF;AAAsF,YAAU;AAAhG,CAFU,EAGV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CAHU,EAIV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CAJU,EAKV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CALU,EAMV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CANU,EAM8F;AACxG;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CAPU,EAQV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CARU,EASV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CATU,EAUV;AAAC,UAAQ,eAAT;AAA0B,YAAU,EAApC;AAAwC,aAAW,EAAnD;AAAuD,eAAa,EAApE;AAAwE,cAAY,EAApF;AAAwF,YAAU;AAAlG,CAVU,CAU6F;AAV7F,CAAd;;AAaA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAACqB,KAAD,CAAlC;AACA,QAAMQ,OAAO,GAAGxB,UAAU,EAA1B;AACA,QAAM;AAACyB,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA2B3B,OAAO,EAAxC;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiC,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMjC,KAAK,CACtB,cADsB,CAA1B;AAGAsB,MAAAA,QAAQ,CAACW,MAAM,CAACC,IAAP,CAAYb,KAAb,CAAR;AACAG,MAAAA,aAAa,CAACS,MAAM,CAACC,IAAP,CAAYX,UAAb,CAAb;;AACA,UAAGO,WAAW,IAAIK,SAAlB,EAA4B;AACxBJ,QAAAA,cAAc,CAACV,KAAK,CAAC,CAAD,CAAN,CAAd;AACH;AACJ,KATD;;AAUAW,IAAAA,SAAS;AACTI,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMC,WAAW,GAAIJ,IAAD,IAAU;AAC1BH,IAAAA,cAAc,CAACG,IAAI,CAAC,MAAD,CAAL,CAAd;AACH,GAFD;;AAIA,QAAMK,WAAW,GAAIC,IAAD,IAAU;AAC1B,wBAAO;AAAA,gBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,KAA+B;AAChDlB,IAAAA,QAAQ,CAACD,KAAK,IAAI;AACd,YAAMoB,IAAI,GAAGpB,KAAK,CAACqB,KAAN,EAAb;;AACA,WAAI,IAAIC,CAAC,GAACL,OAAV,EAAmBK,CAAC,IAAIJ,KAAxB,EAA+BI,CAAC,EAAhC,EAAmC;AAC/BF,QAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,EAAC,GAAGF,IAAI,CAACE,CAAD,CAAR;AAAa,aAAGH;AAAhB,SAAV;AACH;;AACD,aAAO;AAACC,QAAAA;AAAD,OAAP;AACH,KANO,CAAR;AAOH,GARD;;AAUA,QAAMG,WAAW,GAAG,MAAM;AACtBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,QAAIY,IAAI,GAAG;AACP,cAAQnB,WADD;AAEP,cAAQ,MAFD;AAGP,aAAO;AAHA,KAAX;AAKAM,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AAEAtB,IAAAA,OAAO,CAACuB,IAAR,CAAa,iBAAb,EAAgCD,IAAhC;AACH,GAXD;;AAaA,QAAME,YAAN,SAA2BtD,KAAK,CAACuD,SAAjC,CAA2C;AAEvCC,IAAAA,WAAW,CAACC,KAAD,EAAO;AACd,YAAMA,KAAN;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKiB,KAAL,CAAWC,MAAX,CAAkBvC,IAA1C;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAS,KAAKiB,KAAL,CAAWE,OAAhC;AACH;;AAEDC,IAAAA,QAAQ,GAAE,CAET;;AAEDC,IAAAA,KAAK,GAAE;AACHtB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKiB,KAAL,CAAWC,MAAX,CAAkBvC,IAAhD;AACA,aAAO,KAAKsC,KAAL,CAAWC,MAAX,CAAkBvC,IAAzB;AACH;;AAED2C,IAAAA,MAAM,GAAE;AACJ;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AAtBsC;;AAyB3C,OAAI,IAAIZ,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAChC,OAAO,CAAC6C,MAAvB,EAA+Bb,CAAC,EAAhC,EAAmC;AAC/B,QAAIc,GAAG,GAAG9C,OAAO,CAACgC,CAAD,CAAjB;AACAc,IAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBV,YAAhB;AACApC,IAAAA,OAAO,CAACgC,CAAD,CAAP,GAAac,GAAb;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,IAAb;AAAmBC,MAAAA,WAAW,EAAE,IAAhC;AAAsCC,MAAAA,SAAS,EAAE;AAAjD,KAAZ;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BAEI;AAAM,QAAA,QAAQ,EAAEpC,YAAY,CAACU,WAAD,CAA5B;AAA2C,QAAA,KAAK,EAAE;AAAC2B,UAAAA,YAAY,EAAE;AAAf,SAAlD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,SAAS,EAAC,cAA9B;AAA6C,UAAA,GAAG,EAAEpC,QAAQ,CAAC;AAAEqC,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAA1D;AAA+E,UAAA,KAAK,EAAE;AAACrD,YAAAA,KAAK,EAAE;AAAR,WAAtF;AAAA,oBACKQ,KAAK,CAAC8C,GAAN,CAAU5B,WAAV;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,aAAD;AAAe,QAAA,OAAO,EAAExB,OAAxB;AAAiC,QAAA,IAAI,EAAEU,KAAvC;AAA8C,QAAA,SAAS,EAAEA,KAAK,CAACmC,MAA/D;AACI,QAAA,iBAAiB,EAAEnB,YADvB;AACqC,QAAA,gBAAgB,EAAE;AADvD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAvGD;;GAAMrB,I;UAKcjB,U,EACiBD,O;;;KAN/BkB,I;AAyGN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n// STYLES\r\nconst homeStyle = {\r\n    display: 'grid',\r\n    backgroundColor: 'rgba(0,0,0,0.1)',\r\n    padding: '20px', \r\n}\r\n\r\nconst roomSelectStyle = {\r\n    height: '10%'\r\n}\r\n\r\nconst selectStyle = {    \r\n    control: (base) => ({\r\n        ...base,\r\n        width: '150px'\r\n    }),\r\n    menu: (base) => ({\r\n        ...base,\r\n        width: '150px'\r\n    })\r\n}\r\n\r\n// TABLE DATA\r\nconst columns = [\r\n    {name: 'Time', key: 'time', editable: false},\r\n    {name: 'Monday', key: 'monday', editable: true},\r\n    {name: 'Tuesday', key: 'tuesday', editable: true},\r\n    {name: 'Wednesday', key: 'wednesday', editable: true},\r\n    {name: 'Thursday', key: 'thursday', editable: true},\r\n    {name: 'Friday', key: 'friday', editable: true}\r\n]\r\n\r\nconst times = [\r\n    {'time': '8:00 - 8:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},  // slot 1\r\n    {'time': '9:00 - 9:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '10:00 - 10:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '11:00 - 11:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '12:00 - 12:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '13:00 - 13:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},  // slot 6\r\n    {'time': '14:00 - 14:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '15:00 - 15:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '16:00 - 16:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''},\r\n    {'time': '17:00 - 17:50', 'monday': '', 'tuesday': '', 'wednesday': '', 'thursday': '', 'friday': ''}  // slot 10 \r\n]\r\n\r\nconst Home = () => {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [activities, setActivities] = useState([]);\r\n    const [table, setTable] = useState(times);\r\n    const history = useHistory();\r\n    const {handleSubmit, register} = useForm();\r\n    const [currentRoom, setCurrentRoom] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios(\r\n                '/plannerData',\r\n            );\r\n            setRooms(result.data.rooms);\r\n            setActivities(result.data.activities);\r\n            if(currentRoom == undefined){\r\n                setCurrentRoom(rooms[0]);\r\n            }\r\n        }\r\n        fetchData();\r\n        console.log('fetching data...');\r\n    }, []);\r\n\r\n    const roomChanged = (data) => {\r\n        setCurrentRoom(data['room']);\r\n    }\r\n    \r\n    const roomsSelect = (room) => {\r\n        return <option>{room}</option>;\r\n    }\r\n\r\n    const tableUpdated = ({fromRow, toRow, updated}) => {\r\n        setTable(table => {\r\n            const rows = table.slice();\r\n            for(let i=fromRow; i <= toRow; i++){\r\n                rows[i] = {...rows[i], ...updated};\r\n            }\r\n            return {rows};\r\n        });\r\n    }\r\n\r\n    const cellClicked = () => {\r\n        console.log('Cell double clicked');\r\n\r\n        var info = {\r\n            'room': currentRoom,\r\n            'slot': 'cara',\r\n            'day': 'culo'\r\n        }\r\n        console.log(info);\r\n\r\n        history.push('/createActivity', info);\r\n    }\r\n\r\n    class cellRenderer extends React.Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n            console.log('column ' + this.props.column.name);\r\n            console.log('row ' + this.props.rowData);\r\n        }\r\n\r\n        getValue(){\r\n            \r\n        }\r\n\r\n        value(){\r\n            console.log('holisssss    ' + this.props.column.name);\r\n            return this.props.column.name;\r\n        }\r\n\r\n        render(){\r\n            //history.push('/createActivity');\r\n            return(\r\n                <p>hola hoy es </p>\r\n            );\r\n        }\r\n    }\r\n\r\n    for(let i=1; i<columns.length; i++){\r\n        var col = columns[i];\r\n        col['editor'] = cellRenderer;\r\n        columns[i] = col;\r\n    }\r\n\r\n    return (\r\n        <div style={{marginLeft: '8%', marginRight: '8%', marginTop: '15px'}}>\r\n            <div className=\"wrapper\">\r\n\r\n                <form onChange={handleSubmit(roomChanged)} style={{marginBottom: '30px'}}>\r\n                    <label>Room:</label>\r\n                    <select name='room' className=\"form-control\" ref={register({ required: true})} style={{width: '150px'}}>\r\n                        {rooms.map(roomsSelect)}\r\n                    </select>       \r\n                </form>\r\n\r\n                <ReactDataGrid columns={columns} rows={table} rowsCount={table.length} \r\n                    onGridRowsUpdated={tableUpdated} enableCellSelect={true}/>\r\n\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}